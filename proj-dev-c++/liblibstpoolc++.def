; dlltool --base-file F:\temp\S-1-5-~1\temp/cca04228.base --output-exp libstpoolc++.exp --dllname libstpoolc++.lib --output-def liblibstpoolc++.def --exclude-symbol=DllMainCRTStartup@12 --def F:\temp\S-1-5-~1\temp/cca04228.def --output-lib liblibstpoolc++.a
EXPORTS
	OSPX_edesc @ 1
	OSPX_efunc @ 2
	OSPX_error_register @ 3
	OSPX_error_unregister @ 4
	OSPX_errprefix @ 5
	OSPX_errprefix_append @ 6
	OSPX_errprefix_clr @ 7
	OSPX_getlasterror @ 8
	OSPX_gettimeofday @ 9
	OSPX_library_end @ 10
	OSPX_library_init @ 11
	OSPX_pthread_cond_broadcast @ 12
	OSPX_pthread_cond_destroy @ 13
	OSPX_pthread_cond_init @ 14
	OSPX_pthread_cond_signal @ 15
	OSPX_pthread_cond_timedwait @ 16
	OSPX_pthread_create @ 17
	OSPX_pthread_detach @ 18
	OSPX_pthread_join @ 19
	OSPX_pthread_rwlock_destroy @ 20
	OSPX_pthread_rwlock_init @ 21
	OSPX_pthread_rwlock_rdlock @ 22
	OSPX_pthread_rwlock_tryrdlock @ 23
	OSPX_pthread_rwlock_trywrlock @ 24
	OSPX_pthread_rwlock_unlock @ 25
	OSPX_pthread_rwlock_wrlock @ 26
	OSPX_pthread_self @ 27
	OSPX_sem_destroy @ 28
	OSPX_sem_getvalue @ 29
	OSPX_sem_init @ 30
	OSPX_sem_post @ 31
	OSPX_sem_timedwait @ 32
	OSPX_sem_wait @ 33
	OSPX_setlasterror @ 34
	OSPX_setlasterror_ex @ 35
	OSPX_strerror @ 36
	OSPX_sys_strerror @ 37
;	CAllocator::CAllocator(char const*, unsigned int)
	_ZN10CAllocatorC2EPKcj @ 38
;	CAllocator::~CAllocator()
	_ZN10CAllocatorD0Ev @ 39
;	CAllocator::~CAllocator()
	_ZN10CAllocatorD1Ev @ 40
;	CAllocator::~CAllocator()
	_ZN10CAllocatorD2Ev @ 41
;	CTask::getProxySize()
	_ZN5CTask12getProxySizeEv @ 42
;	CTask::getAttr(CTask::attr&)
	_ZN5CTask7getAttrERNS_4attrE @ 43
;	CTask::setAttr(CTask::attr const&)
	_ZN5CTask7setAttrERKNS_4attrE @ 44
;	CTask::CTask(void*, char const*, CTaskPool*)
	_ZN5CTaskC1EPvPKcP9CTaskPool @ 45
;	CTask::CTask(void*, char const*, CTaskPool*)
	_ZN5CTaskC2EPvPKcP9CTaskPool @ 46
;	CTask::~CTask()
	_ZN5CTaskD0Ev @ 47
;	CTask::~CTask()
	_ZN5CTaskD1Ev @ 48
;	CTask::~CTask()
	_ZN5CTaskD2Ev @ 49
;	CMPool::addIfNoExist(char const*, unsigned int)
	_ZN6CMPool12addIfNoExistEPKcj @ 50
;	CMPool::addIfNoExist(unsigned int)
	_ZN6CMPool12addIfNoExistEj @ 51
;	CMPool::add(CAllocator*)
	_ZN6CMPool3addEP10CAllocator @ 52
;	CMPool::get(char const*)
	_ZN6CMPool3getEPKc @ 53
;	CMPool::get(unsigned int)
	_ZN6CMPool3getEj @ 54
;	CMPool::dummy
	_ZN6CMPool5dummyE @ 55 DATA
;	CMPool::flush()
	_ZN6CMPool5flushEv @ 56
;	CMPool::sm_ap
	_ZN6CMPool5sm_apE @ 57 DATA
;	CMPool::create(char const*, unsigned int)
	_ZN6CMPool6createEPKcj @ 58
;	CMPool::remove(CAllocator*)
	_ZN6CMPool6removeEP10CAllocator @ 59
;	CMPool::report(std::string&)
	_ZN6CMPool6reportERSs @ 60
;	CMPool::sm_lock
	_ZN6CMPool7sm_lockE @ 61 DATA
;	CTaskPool::extractErr(int)
	_ZN9CTaskPool10extractErrEi @ 62
;	CTaskPool::enableQueue(bool)
	_ZN9CTaskPool11enableQueueEb @ 63
;	CTaskPool::extractErr1(int)
	_ZN9CTaskPool11extractErr1Ei @ 64
;	CTaskPool::getThreadID()
	_ZN9CTaskPool11getThreadIDEv @ 65
;	CTaskPool::getThreadAttr(threadAttr&)
	_ZN9CTaskPool13getThreadAttrER10threadAttr @ 66
;	CTaskPool::setThreadAttr(threadAttr const&)
	_ZN9CTaskPool13setThreadAttrERK10threadAttr @ 67
;	CTaskPool::createInstance(int, int, bool, int)
	_ZN9CTaskPool14createInstanceEiibi @ 68
;	CTaskPool::setActiveTimeo(long, long)
	_ZN9CTaskPool14setActiveTimeoEll @ 69
;	CTaskPool::waitQueueEnabled(long)
	_ZN9CTaskPool16waitQueueEnabledEl @ 70
;	CTaskPool::enableQueueOnTask(CTask*, bool)
	_ZN9CTaskPool17enableQueueOnTaskEP5CTaskb @ 71
;	CTaskPool::stat(std::string&)
	_ZN9CTaskPool4statERSs @ 72
;	CTaskPool::stat()
	_ZN9CTaskPool4statEv @ 73
;	CTaskPool::wait(CTask*, long)
	_ZN9CTaskPool4waitEP5CTaskl @ 74
;	CTaskPool::queue(CTask*)
	_ZN9CTaskPool5queueEP5CTask @ 75
;	CTaskPool::addRef()
	_ZN9CTaskPool6addRefEv @ 76
;	CTaskPool::adjust(int, int)
	_ZN9CTaskPool6adjustEii @ 77
;	CTaskPool::detach(CTask*)
	_ZN9CTaskPool6detachEP5CTask @ 78
;	CTaskPool::remove(CTask*)
	_ZN9CTaskPool6removeEP5CTask @ 79
;	CTaskPool::resume()
	_ZN9CTaskPool6resumeEv @ 80
;	CTaskPool::wakeup(long)
	_ZN9CTaskPool6wakeupEl @ 81
;	CTaskPool::release()
	_ZN9CTaskPool7releaseEv @ 82
;	CTaskPool::suspend(bool)
	_ZN9CTaskPool7suspendEb @ 83
;	CTaskPool::waitAll(std::list<CTask*, std::allocator<CTask*> > const&, long)
	_ZN9CTaskPool7waitAllERKSt4listIP5CTaskSaIS2_EEl @ 84
;	CTaskPool::waitAny(std::list<CTask*, std::allocator<CTask*> > const&, long)
	_ZN9CTaskPool7waitAnyERKSt4listIP5CTaskSaIS2_EEl @ 85
;	CTaskPool::taskStat(CTask*, long&)
	_ZN9CTaskPool8taskStatEP5CTaskRl @ 86
;	CTaskPool::waitStat(long, long)
	_ZN9CTaskPool8waitStatEll @ 87
;	CTaskPool::adjustAbs(int, int)
	_ZN9CTaskPool9adjustAbsEii @ 88
;	CTaskPool::removeAll(bool)
	_ZN9CTaskPool9removeAllEb @ 89
;	CTaskPool::CTaskPool()
	_ZN9CTaskPoolC1Ev @ 90
;	CTaskPool::~CTaskPool()
	_ZN9CTaskPoolD1Ev @ 91
;	CAllocator::desc() const
	_ZNK10CAllocator4descEv @ 92
;	CAllocator::size() const
	_ZNK10CAllocator4sizeEv @ 93
;	CTask::getProxy() const
	_ZNK5CTask8getProxyEv @ 94
;	CTask::taskName() const
	_ZNK5CTask8taskNameEv @ 95
;	CTask::getParent() const
	_ZNK5CTask9getParentEv @ 96
;	vtable for CAllocator
	_ZTV10CAllocator @ 97 DATA
;	vtable for CTask
	_ZTV5CTask @ 98 DATA
	stpool_add_routine @ 99
	stpool_add_task @ 100
	stpool_addref @ 101
	stpool_adjust @ 102
	stpool_adjust_abs @ 103
	stpool_adjust_wait @ 104
	stpool_create @ 105
	stpool_detach_task @ 106
	stpool_flush @ 107
	stpool_getstat @ 108
	stpool_gettskstat @ 109
	stpool_mark_task @ 110
	stpool_mark_task_ex @ 111
	stpool_pending_leq_wait @ 112
	stpool_release @ 113
	stpool_remove_pending_task @ 114
	stpool_resume @ 115
	stpool_set_activetimeo @ 116
	stpool_status_print @ 117
	stpool_suspend @ 118
	stpool_task_any_wait @ 119
	stpool_task_clone @ 120
	stpool_task_delete @ 121
	stpool_task_getschattr @ 122
	stpool_task_init @ 123
	stpool_task_new @ 124
	stpool_task_setschattr @ 125
	stpool_task_wait @ 126
	stpool_task_waitex @ 127
	stpool_thread_getscheattr @ 128
	stpool_thread_setscheattr @ 129
	stpool_throttle_enable @ 130
	stpool_throttle_wait @ 131
	stpool_version @ 132
	stpool_wakeup @ 133
	stpool_wkid @ 134
